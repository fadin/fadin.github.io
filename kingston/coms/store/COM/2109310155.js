var method_name = "CorporateMeasures.comTransformationFindall";

var server_time = new Date(2018, 8-1, 13, 7, 44, 38);

var execution_time = 2.094617;


var ret = new Array();
ret = new Array();
ret[0] = new Object();
ret[0].ToString = "Barcode To 6 Digits";
ret[0]._ToString = "Barcode To 6 Digits";
ret[0].Active = true;
ret[0].Code = "BCD12to6";
ret[0].Date = new Date(2016, 10-1, 24, 15, 41, 52);
ret[0].Enabled = true;
ret[0].Name = "Barcode To 6 Digits";
ret[0].Order = 0;
ret[0].Remark = "Change a 12 Digit barcode to a 6 digit barcode";
ret[0].Id = 1;
ret[0].DataMapValues = new Array();
ret[0].NameDataFields = new Array();
ret[0].CodeDataFields = new Array();
ret[0].ChangeSteps = new Array();
ret[1] = new Object();
ret[1].ToString = "Cost to USD with Sign";
ret[1]._ToString = "Cost to USD with Sign";
ret[1].Active = true;
ret[1].Code = "To_USD";
ret[1].Date = new Date(2016, 11-1, 21, 1, 55, 0);
ret[1].Enabled = true;
ret[1].Name = "Cost to USD with Sign";
ret[1].Order = 0;
ret[1].Remark = "Convert a money value to USD with appropriate sign based on transaction type";
ret[1].Id = 3;
ret[1].DataMapValues = new Array();
ret[1].NameDataFields = new Array();
ret[1].CodeDataFields = new Array();
ret[1].ChangeSteps = new Array();
ret[2] = new Object();
ret[2].ToString = "Put Dash Between Fields";
ret[2]._ToString = "Put Dash Between Fields";
ret[2].Active = true;
ret[2].Code = "DashBetween";
ret[2].Date = new Date(2016, 11-1, 8, 15, 46, 30);
ret[2].Enabled = true;
ret[2].Name = "Put Dash Between Fields";
ret[2].Order = 0;
ret[2].Remark = "";
ret[2].Id = 2;
ret[2].DataMapValues = new Array();
ret[2].NameDataFields = new Array();
ret[2].CodeDataFields = new Array();
ret[2].ChangeSteps = new Array();
ret[3] = new Object();
ret[3].ToString = "Stay Minutes to Hours";
ret[3]._ToString = "Stay Minutes to Hours";
ret[3].Active = true;
ret[3].Code = "MinToHour";
ret[3].Date = new Date(2018, 5-1, 2, 7, 20, 4);
ret[3].Enabled = true;
ret[3].Name = "Stay Minutes to Hours";
ret[3].Order = 0;
ret[3].Remark = "Converts Minutes to Hours";
ret[3].Id = 6;
ret[3].DataMapValues = new Array();
ret[3].NameDataFields = new Array();
ret[3].CodeDataFields = new Array();
ret[3].ChangeSteps = new Array();
ret[4] = new Object();
ret[4].ToString = "MVTX Item Code";
ret[4]._ToString = "MVTX Item Code";
ret[4].Active = true;
ret[4].Code = "ITCM";
ret[4].Date = new Date(2016, 11-1, 25, 11, 50, 0);
ret[4].Enabled = true;
ret[4].Name = "MVTX Item Code";
ret[4].Order = 0;
ret[4].Remark = "constructs the item code as such: Line/Cat/Serial";
ret[4].Id = 4;
ret[4].DataMapValues = new Array();
ret[4].NameDataFields = new Array();
ret[4].CodeDataFields = new Array();
ret[4].ChangeSteps = new Array();
ret[5] = new Object();
ret[5].ToString = "PI Item Code";
ret[5]._ToString = "PI Item Code";
ret[5].Active = true;
ret[5].Code = "ITCPI";
ret[5].Date = new Date(2016, 11-1, 25, 22, 53, 15);
ret[5].Enabled = true;
ret[5].Name = "PI Item Code";
ret[5].Order = 0;
ret[5].Remark = "constructs the item code as such: Line/Cat/Serial";
ret[5].Id = 5;
ret[5].DataMapValues = new Array();
ret[5].NameDataFields = new Array();
ret[5].CodeDataFields = new Array();
ret[5].ChangeSteps = new Array();


ret.Count = 6;